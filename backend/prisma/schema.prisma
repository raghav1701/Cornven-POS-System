generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  password     String
  role         Role
  phone        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // relations
  tenants      Tenant[]
  allocations  Rental[]  @relation("AllocatedBy")
}

model Tenant {
  id           String    @id @default(uuid())
  userId       String    @unique
  businessName String
  address      String?
  notes        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // relations
  user         User      @relation(fields: [userId], references: [id])
  rentals      Rental[]
}

model Cube {
  id            String      @id @default(uuid())
  code          String      @unique
  size          String
  pricePerMonth Float
  status        CubeStatus  @default(AVAILABLE)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // relations
  rentals       Rental[]
}

model Rental {
  id            String        @id @default(uuid())
  tenantId      String
  cubeId        String
  startDate     DateTime
  endDate       DateTime
  status        RentalStatus  @default(ACTIVE)
  monthlyRent   Float
  lastPayment   DateTime?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  allocatedById String

  // relations
  tenant        Tenant        @relation(fields: [tenantId], references: [id])
  cube          Cube          @relation(fields: [cubeId], references: [id])
  allocatedBy   User          @relation("AllocatedBy", fields: [allocatedById], references: [id])
}

enum Role {
  ADMIN
  STAFF
  TENANT
  ACCOUNTANT
}

enum CubeStatus {
  AVAILABLE
  RENTED
  MAINTENANCE
}

enum RentalStatus {
  ACTIVE
  UPCOMING
  EXPIRED
}
