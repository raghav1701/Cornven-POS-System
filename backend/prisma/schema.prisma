// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role
  phone     String?
  tenants   Tenant[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tenant {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  businessName String
  address      String?
  notes        String?
  rentals      Rental[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Cube {
  id          Int       @id @default(autoincrement())
  code        String    @unique // e.g. A1, B2
  size        String
  pricePerMonth Float
  status      CubeStatus @default(AVAILABLE)
  rentals     Rental[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Rental {
  id          Int       @id @default(autoincrement())
  tenant      Tenant    @relation(fields: [tenantId], references: [id])
  tenantId    Int
  cube        Cube      @relation(fields: [cubeId], references: [id])
  cubeId      Int
  startDate   DateTime
  endDate     DateTime
  status      RentalStatus @default(ACTIVE)
  monthlyRent Float
  lastPayment DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  STAFF
  TENANT
  ACCOUNTANT
}

enum CubeStatus {
  AVAILABLE
  RENTED
  MAINTENANCE
}

enum RentalStatus {
  ACTIVE
  UPCOMING
  EXPIRED
}
